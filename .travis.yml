language: python
matrix:
  include:
  - os: linux
    python: '2.7'
    services:
    - docker
    env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64 PYVER=cp27-cp27mu
  - os: linux
    python: '3.5'
    services:
    - docker
    env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64 PYVER=cp35-cp35m
  - os: linux
    python: '3.6'
    services:
    - docker
    env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64 PYVER=cp36-cp36m
  - os: linux
    python: '3.7'
    dist: xenial
    services:
    - docker
    env: DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64 PYVER=cp37-cp37m
  - os: osx
    language: generic
    env: PYTHON=2.7.12
  - os: osx
    language: generic
    env: PYTHON=3.5.3
  - os: osx
    language: generic
    env: PYTHON=3.6.1
  - os: osx
    language: generic
    env: PYTHON=3.7.1
before_install:
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then source ./bin/travis-prepare-osx.sh; fi
- pip install --upgrade pip setuptools wheel coverage
- openssl aes-256-cbc -K $MY_KEY -iv $MY_IV -in root_key.enc -out root_key -d
install:
- export DEFAULT_VENV=$VIRTUAL_ENV
- pip install -r requirements-dev.txt
- pip install -r requirements-extra.txt
- pip install virtualenv coveralls flake8
- virtualenv venv && source venv/bin/activate
- pip install -r requirements.txt
- pip install pytest pytest-timeout
- if [ -z "$DEFAULT_VENV" ]; then deactivate; else source $DEFAULT_VENV/bin/activate;
  fi
- CI_MODE=1 python setup.py build_ext --force --inplace
- source bin/download-etcd.sh
before_script:
- flake8 mars --count --select=E111,E901,E999,F401,F821,F822,F823,F841 --show-source
  --statistics
- flake8 mars --count --exit-zero --statistics
- bash test_mypy.sh
env: TRAVIS=True
script:
- echo "SCRIPT SECTION"
